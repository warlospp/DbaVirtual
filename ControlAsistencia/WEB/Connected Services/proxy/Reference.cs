//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB.proxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="proxy.IControlAsistencia")]
    public interface IControlAsistencia {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlAsistencia/getDepartamento", ReplyAction="http://tempuri.org/IControlAsistencia/getDepartamentoResponse")]
        DTO.Empleados.dtoDepartamento[] getDepartamento(string _str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlAsistencia/getDepartamento", ReplyAction="http://tempuri.org/IControlAsistencia/getDepartamentoResponse")]
        System.Threading.Tasks.Task<DTO.Empleados.dtoDepartamento[]> getDepartamentoAsync(string _str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlAsistencia/procesarTurno", ReplyAction="http://tempuri.org/IControlAsistencia/procesarTurnoResponse")]
        void procesarTurno(string[] _strIdDepartamento, int[] _intIdEmpleado, string _strEmpleado, System.DateTime _dtFechaInicio, System.DateTime _dtFechaFin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlAsistencia/procesarTurno", ReplyAction="http://tempuri.org/IControlAsistencia/procesarTurnoResponse")]
        System.Threading.Tasks.Task procesarTurnoAsync(string[] _strIdDepartamento, int[] _intIdEmpleado, string _strEmpleado, System.DateTime _dtFechaInicio, System.DateTime _dtFechaFin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IControlAsistenciaChannel : WEB.proxy.IControlAsistencia, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ControlAsistenciaClient : System.ServiceModel.ClientBase<WEB.proxy.IControlAsistencia>, WEB.proxy.IControlAsistencia {
        
        public ControlAsistenciaClient() {
        }
        
        public ControlAsistenciaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ControlAsistenciaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlAsistenciaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlAsistenciaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DTO.Empleados.dtoDepartamento[] getDepartamento(string _str) {
            return base.Channel.getDepartamento(_str);
        }
        
        public System.Threading.Tasks.Task<DTO.Empleados.dtoDepartamento[]> getDepartamentoAsync(string _str) {
            return base.Channel.getDepartamentoAsync(_str);
        }
        
        public void procesarTurno(string[] _strIdDepartamento, int[] _intIdEmpleado, string _strEmpleado, System.DateTime _dtFechaInicio, System.DateTime _dtFechaFin) {
            base.Channel.procesarTurno(_strIdDepartamento, _intIdEmpleado, _strEmpleado, _dtFechaInicio, _dtFechaFin);
        }
        
        public System.Threading.Tasks.Task procesarTurnoAsync(string[] _strIdDepartamento, int[] _intIdEmpleado, string _strEmpleado, System.DateTime _dtFechaInicio, System.DateTime _dtFechaFin) {
            return base.Channel.procesarTurnoAsync(_strIdDepartamento, _intIdEmpleado, _strEmpleado, _dtFechaInicio, _dtFechaFin);
        }
    }
}
